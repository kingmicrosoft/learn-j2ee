<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!-- 防止jsp等静态资源被拦截 -->
    <mvc:default-servlet-handler/>
    <!-- 激活@Controller @Service 标签模式 -->
    <mvc:annotation-driven/>

    <!--<mvc:resources mapping="/css/**" location="/css/"/>-->
    <!--<mvc:resources mapping="/js/**" location="/js/"/>-->
    <!--<mvc:resources mapping="/img/**" location="/img/"/>-->

    <!-- Enable @AspectJ support 支持后面Service事务的配置 -->
    <aop:aspectj-autoproxy/>

    <!--扫描controller包-->
    <context:component-scan base-package="com.xgq.controller"/>

    <!--扫描service包-->
    <context:component-scan base-package="com.xgq.service"/>

    <!--扫描restService包-->
    <context:component-scan base-package="com.xgq.restService"/>

    <!--扫描common包-->
    <context:component-scan base-package="com.xgq.common"/>

    <!--springMVC相当于拥有2个容器，一个是servlet.xml文件，一个是applicationContext.xml文件，配置不共用，所有2个地方都得配置-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/dev/jdbc.properties</value>
                <value>classpath:/dev/system.properties</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--JstlView使前端jsp支持jstl，如fmt等-->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <!--国际化配置开始-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <!--基于session的localeResolver，如果不配置，默认使用浏览器的locale-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>

    <mvc:interceptors>
        <!-- 国际化请求拦截器处理 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>

        <!--增加登陆拦截器,一般登陆拦截使用servlet过滤器-->
        <!--<mvc:interceptor>-->
            <!-- 表示符合/*这样的模式才拦截 -->
            <!--<mvc:mapping path="/index" />-->
            <!--<bean class="com.xgq.interceptor.LoginInterceptor" />-->
        <!--</mvc:interceptor>-->
    </mvc:interceptors>
    <!--国际化配置结束-->
</beans>